#
# For a description of the syntax of this configuration file,
# see Documentation/kbuild/kconfig-language.txt.
#
mainmenu "linux-socdev - Linux drivers build system for SoC devices"


choice SOC_BOARD
      prompt "Select SOC board"
      depends on ENABLE_FPGA
      config WITH_SOC_RED_PITAYA
       bool "red_pitaya"
      config WITH_SOC_PARALLELLA
       bool "parallella"
endchoice


# //////////////////////////////////////////////////////////////////////////// #
# //  TOOLCHAIN  ///////////////////////////////////////////////////////////// #
# //////////////////////////////////////////////////////////////////////////// #

source conf/scripts/toolchain.kconfig


# //////////////////////////////////////////////////////////////////////////// #
# //  FPGA  ////////////////////////////////////////////////////////////////// #
# //////////////////////////////////////////////////////////////////////////// #


source fpga/Kconfig


# //////////////////////////////////////////////////////////////////////////// #
# //  LINUX  ///////////////////////////////////////////////////////////////// #
# //////////////////////////////////////////////////////////////////////////// #

menu LINUX_BUILD
  config LINUX_DIR
	string  "Linux sources directory name"
	default "linux"

  config LINUX_DIR_IN_SRCTREE
	bool    "Place linux sources in src tree"
	default n

  choice LINUX_DLMETHOD
	prompt "Linux sources download method"
	config WITH_LINUX_TAR
	 bool "tar archive"
	config WITH_LINUX_GIT
	 bool "git repository"
  endchoice

  config LINUX_GIT
	string  "Linux git repository"
	depends on WITH_LINUX_GIT
	default "https://github.com/Xilinx/linux-xlnx.git"

  config LINUX_TAR
	string  "Linux tar repository"
	depends on WITH_LINUX_TAR
	default "https://github.com/Xilinx/linux-xlnx/archive/xilinx-v2016.1.tar.gz"

  choice LINUX_PACKAGE
	prompt  "Linux image type"
	config LINUX_UIMAGE
	 bool "uImage"
	config LINUX_ZIMAGE
	 bool "zImage"
  endchoice

  config LINUX_UIMAGE_LOADADDR
	string  "Linux uImage load address defined in u-boot"
	depends on LINUX_UIMAGE
	default "0x8000"

  config LINUX_DEF_CONFIG
	string  "Linux def config"
	default ""
#	default "${srcdir}/conf/linux/${KERNELVERSION}/red_pitaya.def" if WITH_SOC_RED_PITAYA
#	default "${srcdir}/conf/linux/${KERNELVERSION}/parallella.def" if WITH_SOC_PARALLELLA

  config MAKE_PROCESS
      int "Number of parallel process (aka -j option)"
      range 1 16
      default 8

  config LINUX_CFLAGS
      string  "linux and modules compiler flags"
      default "-O2 -mtune=cortex-a9 -mfpu=neon -mfloat-abi=hard"


endmenu # LINUX_BUILD


# //////////////////////////////////////////////////////////////////////////// #
# //  YOCTO  ///////////////////////////////////////////////////////////////// #
# //////////////////////////////////////////////////////////////////////////// #

menu YOCTO
  config ENABLE_YOCTO
	bool  "Enable Yocto build"
	default "no"

  config YOCTO_DIR
	string  "Yocto src directory"
	depends on ENABLE_YOCTO
	default "yocto"

  choice YOCTO_DLMETHOD
	prompt "Yocto sources download method"
	config WITH_YOCTO_TAR
	 bool "tar archive"
	config WITH_YOCTO_GIT
	 bool "git repository"
  endchoice

  config YOCTO_TAR
	string  "Yocto tar repository"
	depends on WITH_YOCTO_TAR
	default "http://downloads.yoctoproject.org/releases/yocto/yocto-2.2/poky-morty-16.0.0.tar.bz2"

  config YOCTO_GIT
	string  "Yocto git repository"
	depends on WITH_YOCTO_GIT
	default "git://git.yoctoproject.org/poky.git"

  config YOCTO_VERSION
	string  "Yocto version"
	depends on WITH_YOCTO_GIT
	default "morty"

  config ENABLE_YOCTO_XILINX
	bool  "Enable Yocto meta-xilinx build"
	depends on ENABLE_YOCTO
	default "no"

  choice YOCTO_XILINX_DLMETHOD
	prompt "Yocto meta-xilinx sources download method"
	config WITH_YOCTO_XILINX_TAR
	 bool "tar archive"
	config WITH_YOCTO_XILINX_GIT
	 bool "git repository"
  endchoice

  config YOCTO_XILINX_TAR
	string  "Yocto meta-xilinx tar repository"
	depends on WITH_YOCTO_XILINX_TAR
	default ""

  config YOCTO_XILINX_GIT
	string  "Yocto meta-xilinx git repository"
	depends on WITH_YOCTO_XILINX_GIT
	default "https://github.com/Xilinx/meta-xilinx.git"

  config YOCTO_LINARO_GIT
	string  "Yocto meta-linaro-toolchain git repository"
	depends on ENABLE_YOCTO_XILINX
	default "https://github.com/Xilinx/meta-xilinx.git"



endmenu # YOCTO

# //////////////////////////////////////////////////////////////////////////// #
# //  DOCKER  //////////////////////////////////////////////////////////////// #
# //////////////////////////////////////////////////////////////////////////// #

config ENABLE_DOCKER
        bool "Enable docker build"
	---help---
	  This enables the docker build mechanism provided by a m4 macro
	  that uses a custom script for SHELL command in  make  to enter
	  a given running docker container. The actual  configure script
	  and all make commands are executed  within that container.
	  To see  how to manage  this please run "make docker" after the
	  configuration completes.

menu   DOCKER_BUILD
        depends on ENABLE_DOCKER

  choice DOCKER_BUILD
        prompt "Select the docker build method"
        depends on ENABLE_DOCKER
        config WITH_DOCKER_IMAGE
         bool "Pull docker image"
        config WITH_DOCKER_CONTAINER
         bool "Start existing docker container"
        config WITH_DOCKER_URL
         bool "Create from url with a Dockerfile"
  endchoice

  config DOCKER_IMAGE
        string "Docker image"
        depends on ENABLE_DOCKER
        depends on WITH_DOCKER_IMAGE
        default "mdsplus/docker:build_fc22"

  config DOCKER_CONTAINER
        string "Container name or ID"
        depends on ENABLE_DOCKER
        depends on WITH_DOCKER_CONTAINER

  config DOCKER_URL
        string "Url"
        depends on ENABLE_DOCKER
        depends on WITH_DOCKER_URL
        default "${srcdir}/conf/docker/ub14"
	---help---
	  Url or path to a directory wiht a valid Dockerfile

  config DOCKER_SHARES
	string "Additional user shares"
	depends on ENABLE_DOCKER
	default ""
	---help---
	  Read a list of additional docker shares in the form:
	  <local_path_1>:<remote_path_> [<lcoal_path_2>:<remote_path_2>] [...]
	  This could be used to add common paths such the Vivado local install
	  or toolchains.
	  
	  Note:
	  The srcdir and current build dir are always shared to the container
         

endmenu # DOCKER_BUILD


# //////////////////////////////////////////////////////////////////////////// #
# //  TARGET_DEVICE  ///////////////////////////////////////////////////////// #
# //////////////////////////////////////////////////////////////////////////// #

menu TARGET_DEVICE

    config DEVICE_NAME
          string  "Enter device name"
          
    config DEVICE_IP
          string  "Enter device IP address"
          
    config DEVICE_ACCESS
          string  "Enter device access method"
          default "sftp"
          
    config DEVICE_USER
          string  "User to connect device with"
          default "root"

    choice DEVICE_AUTHMETHOD
          prompt "Select device authentication method"
          config WITH_DEVICE_SSHPASSWD
           bool "Auth on device using password"
          config WITH_DEVICE_SSHKEY
           bool "Auth on device using ssh keyid"
    endchoice

    config DEVICE_PASSWD
          string  "User password to autenticate user"
          depends on WITH_DEVICE_SSHPASSWD
          default "root"

    config DEVICE_SSHKEY
          string  "User rsa_key to autenticate"
          depends on WITH_DEVICE_SSHKEY
          default "$HOME/.ssh/id_rsa"

    config DEVICE_MODULES_DIR
          string  "Target device modules directory"
          default "/lib/modules"

    config DEVICE_BOOT_DIR
	  string  "Target device boot directory"
	  default "/boot"

endmenu # TARGET_DEVICE




# config TEST_VARIABLE
#      string  "Test variable"
#      default "prova"
