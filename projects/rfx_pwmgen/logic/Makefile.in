# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = projects/rfx_pwmgen/logic
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_defun_local.m4 \
	$(top_srcdir)/m4/ax_enable_kconfig.m4 \
	$(top_srcdir)/m4/m4_ax_check_enable_debug.m4 \
	$(top_srcdir)/m4/m4_ax_configure_args.m4 \
	$(top_srcdir)/m4/m4_ax_docker_build.m4 \
	$(top_srcdir)/m4/m4_ax_is_release.m4 \
	$(top_srcdir)/m4/m4_ax_valgrind_check.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Common.am
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CROSS_COMPILE = @CROSS_COMPILE@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DEVICE_ACCESS = @DEVICE_ACCESS@
DEVICE_BOOT_DIR = @DEVICE_BOOT_DIR@
DEVICE_IP = @DEVICE_IP@
DEVICE_MODULES_DIR = @DEVICE_MODULES_DIR@
DEVICE_NAME = @DEVICE_NAME@
DEVICE_PASSWD = @DEVICE_PASSWD@
DEVICE_SSHKEY = @DEVICE_SSHKEY@
DEVICE_USER = @DEVICE_USER@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
HAVE_DOCKER = @HAVE_DOCKER@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LINUX_CFLAGS = @LINUX_CFLAGS@
# LINUX_DIR       ?= linux-xlnx
LINUX_DIR = $(abs_top_srcdir)/linux-xlnx
LINUX_PACKAGE = @LINUX_PACKAGE@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSHPASS = @SSHPASS@
STRIP = @STRIP@
TOOLCHAIN_BINDIR = @TOOLCHAIN_BINDIR@
TOOLCHAIN_TAR = @TOOLCHAIN_TAR@
VERSION = @VERSION@
VIVADO_SETUP_SCRIPT = @VIVADO_SETUP_SCRIPT@
VIVADO_VERSION = @VIVADO_VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
TOOLCHAIN = $(top_builddir)/toolchain
FPGA_DIR = $(abs_top_srcdir)/fpga
FPGA_REPO_DIR = $(abs_top_srcdir)/fpga/ip_repo
LINUX_BUILDDIR = $(abs_top_builddir)/linux-xlnx
ARCH = arm
TOOLCHAIN_PATH = ${abs_top_builddir}/toolchain/${TOOLCHAIN_BINDIR}

# Vivado from Xilinx provides IP handling, FPGA compilation
# hsi (hardware software interface) provides software integration
# both tools are run in batch mode with an option to avoid log/journal files
VIVADO = vivado -nolog -nojournal -mode batch
HSI = hsi    -nolog -nojournal -mode batch
FSBL_ELF = sdk/fsbl/executable.elf
DTS = sdk/dts/devicetree.dts
DTB = sdk/dts/devicetree.dtb
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Common.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign projects/rfx_pwmgen/logic/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign projects/rfx_pwmgen/logic/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Common.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic cscopelist-am \
	ctags-am distclean distclean-generic distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags-am uninstall uninstall-am

.PRECIOUS: Makefile

MAKE_PROCESS ?= $(shell grep -c ^processor /proc/cpuinfo)
TMP          ?= $(abs_top_builddir)

VIVADO_VERSION ?= 2015.4

LINUX_CFLAGS    ?= "-O2 -mtune=cortex-a9 -mfpu=neon -mfloat-abi=hard"
LINUX_PACKAGE   ?= uImage
LINUX_IMAGE     ?= $(TMP)/$(LINUX_PACKAGE)
TOOLCHAIN_BINDIR ?= gcc-linaro-4.9-2014.11-x86_64_arm-linux-gnueabihf/bin
CROSS_COMPILE    ?= arm-linux-gnueabihf-

define _set_export
export ARCH=$(ARCH); \
export CROSS_COMPILE=${CROSS_COMPILE}; \
export PATH=$${PATH}:$(TOOLCHAIN_PATH); \
export O=$(LINUX_BUILDDIR)
endef

# docker build targets 
@AX_DOCKER_BUILD_TARGETS@

.PHONY: reconfigure
reconfigure:
	@ \
	echo " -- Reconfiguring build with following parameters: -----------"; \
	echo $(shell $(abs_top_builddir)/config.status --config);              \
	echo " -------------------------------------------------------------"; \
	echo ; \
	cd '$(abs_top_builddir)' && \
	$(abs_top_srcdir)/configure $(shell $(abs_top_builddir)/config.status --config);

print-env:
	@\
	$(_set_export); \
	echo ""; \
	echo "---[KERNEL BUILD]----------------------------------------------------------"; \
	echo " compiler: ${CROSS_COMPILE}${CC}"; \
	echo " arch    : ${ARCH}"; \
	echo " flags   : ${LINUX_CFLAGS}"; \
	echo " TOOLCH  : ${TOOLCHAIN_PATH}"; \
	echo " PATH    : $${PATH}"; \
	echo " builddir: $${O}"; \
	echo "---------------------------------------------------------------------------"; \
	echo ""

SOC_BOARD       ?= red_pitaya
VIVADO_VERSION  ?= 2015.4
VIVADO_SOC_PART ?= xc7z010clg400-1

SYSTEM    ?= ${SOC_BOARD}_${VIVADO_VERSION}
FPGA_SDC  ?= ${SYSTEM}.xdc
FPGA_BIT  ?= out/${SYSTEM}.bit

define _envset
. $(VIVADO_SETUP_SCRIPT); \
export srcdir=$(srcdir); \
export top_srcdir=$(top_srcdir); \
export tmp=$(TMP); \
export FPGA_REPO_DIR=${FPGA_REPO_DIR}; \
export SYSTEM=${SYSTEM}; \
export FPGA_SDC=${FPGA_SDC}; \
export FPGA_BIT=${FPGA_BIT}; \
export SOC_BOARD=${SOC_BOARD}; \
export VIVADO_VERSION=${VIVADO_VERSION}; \
export VIVADO_SOC_PART=${VIVADO_SOC_PART}; \
export maxThreads=8
endef

.PHONY: all clean project fpga bit fsbl dts dtb

all: $(FPGA_BIT) $(DTB)

clean:
	-rm -rf out .Xil .srcs sdk

project:
	( ${_envset}; \
	vivado -source $(FPGA_DIR)/red_pitaya_vivado_project.tcl )

clean_project:
	-rm -rf project  vivado.jou  vivado.log  \
		vivado_*.backup.jou  vivado_*.backup.log  vivado_pid*.str \
		webtalk.jou  webtalk.log  \
		webtalk_*.backup.jou  webtalk_*.backup.log

update_project:
	cp -a $(builddir)/project/system.tcl $(srcdir)/${SYSTEM}.tcl

fpga bit: $(FPGA_BIT)

$(FPGA_BIT):
	( ${_envset}; \
	  $(VIVADO) -source $(FPGA_DIR)/red_pitaya_vivado.tcl )

fsbl: $(FSBL_ELF)

$(FSBL_ELF):  $(FPGA_BIT)
	${_envset}; \
	$(HSI) -source $(FPGA_DIR)/red_pitaya_hsi_fsbl.tcl

dts: $(DTS)
dtb: $(DTB)

sdk/dts/system.dts:  $(FPGA_BIT)
	( ${_envset}; \
	  $(HSI) -source $(FPGA_DIR)/red_pitaya_hsi_dts.tcl )

$(DTS): sdk/dts/system.dts $(LINUX_IMAGE)
	$(LINUX_BUILDDIR)/scripts/dtc/dtc -i sdk/dts/ sdk/dts/system.dts > $@

$(DTB):  $(DTS) $(LINUX_IMAGE)
	$(LINUX_BUILDDIR)/scripts/dtc/dtc -I dts -O dtb -o $@ -i sdk/dts/ $^

.PHONY: deploy
deploy: $(FPGA_BIT) $(LINUX_IMAGE) $(DTB)
@WITH_DEVICE_SSHKEY_TRUE@	@ echo " --- deploying to target device: ${DEVICE_NAME} using key ---";
@WITH_DEVICE_SSHKEY_TRUE@	scp -i $(DEVICE_SSHKEY) $^ \
@WITH_DEVICE_SSHKEY_TRUE@	  $(DEVICE_USER)@$(DEVICE_IP):$(DEVICE_INSTALL_DIR);
@WITH_DEVICE_SSHKEY_FALSE@@WITH_DEVICE_SSHPASSWD_TRUE@	@ echo " --- deploying to target device: ${DEVICE_NAME} using passwd ---";
@WITH_DEVICE_SSHKEY_FALSE@@WITH_DEVICE_SSHPASSWD_TRUE@	sshpass -p ${DEVICE_PASSWD} scp $^ \
@WITH_DEVICE_SSHKEY_FALSE@@WITH_DEVICE_SSHPASSWD_TRUE@	  $(DEVICE_USER)@$(DEVICE_IP):$(DEVICE_BOOT_DIR);

.PHONY: deploy_fpga
deploy_fpga: $(FPGA_BIT)
	@ echo ""; \
	  echo " WARNING: This will reprogram fpga without setting devicetree and kernel "
@WITH_DEVICE_SSHKEY_TRUE@	@ echo " --- deploying to target device: ${DEVICE_NAME} using key ---";
@WITH_DEVICE_SSHKEY_TRUE@	scp -i $(DEVICE_SSHKEY) $^ \
@WITH_DEVICE_SSHKEY_TRUE@	  $(DEVICE_USER)@$(DEVICE_IP):/tmp/fpga.bit; \
@WITH_DEVICE_SSHKEY_TRUE@	ssh -i $(DEVICE_SSHKEY) $(DEVICE_USER)@$(DEVICE_IP) "cat /tmp/fpga.bit > /dev/xdevcfg";
@WITH_DEVICE_SSHKEY_FALSE@@WITH_DEVICE_SSHPASSWD_TRUE@	@ echo " --- deploying to target device: ${DEVICE_NAME} using passwd ---";
@WITH_DEVICE_SSHKEY_FALSE@@WITH_DEVICE_SSHPASSWD_TRUE@	sshpass -p ${DEVICE_PASSWD} scp $^ \
@WITH_DEVICE_SSHKEY_FALSE@@WITH_DEVICE_SSHPASSWD_TRUE@	  $(DEVICE_USER)@$(DEVICE_IP):/tmp; \
@WITH_DEVICE_SSHKEY_FALSE@@WITH_DEVICE_SSHPASSWD_TRUE@	sshpass -p ${DEVICE_PASSWD} \
@WITH_DEVICE_SSHKEY_FALSE@@WITH_DEVICE_SSHPASSWD_TRUE@	  ssh $(DEVICE_USER)@$(DEVICE_IP) "cat /tmp/fpga.bit > /dev/xdevcfg";

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
